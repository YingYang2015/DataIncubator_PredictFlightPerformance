sum(is.na(monthlydata$ArrTime))
monthlydata <- data
n <- dim(monthlydata)[1]
cancelledPercentage <- sum(monthlydata$Cancelled)/n # the precentage of cancelled flights
divertedPercentage <- sum(monthlydata$Diverted)/n   # the precentage of diverted flights
monthlydata <- monthlydata[which(monthlydata$Cancelled != 1), ] # delete the record which are cancelled
monthlydata <- monthlydata[which(monthlydata$Diverted != 1), ]  # delete the record which are diverted
Drop <- c("Cancelled","CancellationCode", "Diverted")
monthlydata <- monthlydata[, !(colnames(monthlydata) %in% Drop)] # delete the column related to cancellation
apply(monthlydata, 2, function(x) sum(is.na(x)))  # check the missing values
apply(monthlydata, 2, function(x) sum(x<0))
monthlydata$FlightNum<0
sum(monthlydata$FlightNum<0)
X <- apply(monthlydata, 2, function(x) sum( x<0 ))
X
apply(monthlydata$DayofMonth, 2, function(x) sum( x<0 ))
apply(c(monthlydata$DayofMonth, monthlydata$FlightNum), 2, function(x) sum( x<0 ))
c(monthlydata$DayofMonth, monthlydata$FlightNum)
monthlydata['DayofMonth', FlightNum']
monthlydata['DayofMonth', 'FlightNum']
monthlydata['DayofMonth']
monthlydata[c('DayofMonth', 'FlightNum')]
head(monthlydata[c('DayofMonth', 'FlightNum')])
apply(monthlydata[c('DayofMonth', 'FlightNum')], 2, function(x) sum( x<0 ))
apply(monthlydata[c('DayofMonth', 'FlightNum')], 2, function(x) sum( x<0 ))
X
X$FlightNum
class(X)
dim(monthlydata)
apply(monthlydata[,1:49], 2, function(x) sum( x<0 ))
apply(monthlydata[,1:4], 2, function(x) sum(x < 0))
apply(monthlydata[,1:5], 2, function(x) sum(x < 0))
apply(monthlydata[,1:10], 2, function(x) sum(x < 0))
apply(monthlydata[,2:10], 2, function(x) sum(x < 0))
apply(monthlydata[,3:10], 2, function(x) sum(x < 0))
apply(monthlydata[,4:10], 2, function(x) sum(x < 0))
apply(monthlydata[,c(4,10)], 2, function(x) sum(x < 0))
apply(monthlydata[,5:10], 2, function(x) sum(x < 0))
apply(monthlydata[,5:10], 2, function(x) mean(x < 0))
apply(monthlydata[,5:10], 2, function(x) mean(x == 0))
apply(monthlydata[,1:10], 2, function(x) mean(x == 0))
apply(monthlydata[,1:10], 2, function(x) mean(x > 0))
for(i in (1:dim(monthlydata)[2])){
sum(monthlydata[,i]<0)
}
warnings
warnings()
for(i in (1:dim(monthlydata)[2])){
a[i]<-sum(monthlydata[,i]<0)
}
a
X
class(monthlydata$Year)
c(names(monthlydata), a)
cbind(names(monthlydata), a)
summary(monthlydata)
delayedPercentage <- sum(monthlydata$ArrDelayMinutes >0)/dim(monthlydata)[1]
delayedPercentage
dim(monthlydata)[1]
sum(monthlydata$ArrDelayMinutes > 0)
delayed15Percentage <- sum(monthlydata$ArrDel15 > 0)/dim(monthlydata)[1]
delayed15Percentage
summary(monthlydata[,c(ArrDelayMinutes, ArrDel15, DepDelayMinutes, DepDel15)])
summary(monthlydata[,c("ArrDelayMinutes", "ArrDel15", "DepDelayMinutes", "DepDel15")])
structure(monthlydata[,c("ArrDelayMinutes", "ArrDel15", "DepDelayMinutes", "DepDel15")])
Percentage <- apply(monthlydata[,c("ArrDelayMinutes", "ArrDel15", "DepDelayMinutes", "DepDel15")], 2, function(x) sum(x>0)/n)  # check the missing values, and we find that there is no missing values any more
Percentage
str(monthlydata[,c("ArrDelayMinutes", "ArrDel15", "DepDelayMinutes", "DepDel15")])
quantile(delayVar)
delayVar <- monthlydata[,c("ArrDelayMinutes", "ArrDel15", "DepDelayMinutes", "DepDel15")]
summary(delayVar)
str(delayVar)
quantile(delayVar)
quantile(delayVar, na.rm = FALSE)
quantile(monthlydata$ArrDelayMinutes, na.rm = FALSE)
quantile(monthlydata$ArrDelayMinutes[which(monthlydata$ArrDelayMinutes > 0)], na.rm = FALSE)
histogra(monthlydata$ArrDelayMinutes)
histogram(monthlydata$ArrDelayMinutes)
apply(monthlydata, 2, function(x) any(is.na(x)))
histogram(monthlydata$ArrDelayMinutes)
hist(monthlydata$ArrDelayMinutes)
quantile(monthlydata$ArrDelayMinutes[which(monthlydata$ArrDelayMinutes > 0)], na.rm = FALSE)
range(monthlydata$ArrDelayMinutes)
1659/60
24*60
sum(monthlydata$ArrDelayMinutes>24*60)
sum(monthlydata$ArrDelayMinutes>1000)
range(monthlydata$ArrDelayMinutes[which(monthlydata$ArrDelayMinutes > 0)])
hist(monthlydata$ArrDelayMinutes[which(monthlydata$ArrDelayMinutes > 0)])
library(plyr)
monthlydata <- mutate(monthlydata, event = ArrDelayMinutes>0)
monthlydata$event
monthlydata <- mutate(monthlydata, ArrDelayevent = ArrDelayMinutes > 0)
monthlydata <- mutate(monthlydata, DepDelayevent = DepDelayMinutes > 0)
?aggregate
TotalEventNumber <- aggregate(DepDelayevent, FUN=precentage, data=monthlydata, na.rm=T)
names(monthlydata)
TotalEventNumber <- aggregate(DepDelayevent, FUN=sum, data=monthlydata, na.rm=T)
TotalEventNumber <- aggregate(DepDelayevent, FUN=sum, data=monthlydata, na.rm=F)
TotalEventNumber <- aggregate(DepDelayevent ~., FUN=sum, data=monthlydata, na.rm=F)
TotalEventNumber
TotalEventNumber <- aggregate(DepDelayevent ~ Carrier, FUN=sum, data=monthlydata, na.rm=F)
TotalEventNumber
TotalEventNumber <- aggregate(DepDelayevent ~ Carrier, FUN=percentage, data=monthlydata, na.rm=F)
TotalEventNumber <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
TotalEventNumber
orderedEvent <- TotalEventNumber[order(TotalEventNumber$DepDelayevent, decreasing = T),]
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
main="Top 15 most frequent storms and weather events")
weekday
#setwd("C:/Users/Ying Yang/Dropbox/Data Science/Jonhs Hopkins Courses/R coding practice _Ying/Repreducible research/Project 1")
source('C:/Users/User/Dropbox/Data Science/Jonhs Hopkins Courses/R coding practice _Ying/6. Repreducible research/Project 1/Peer Assessment 1.R', echo=TRUE)
library(ggplot2)
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent))+
stat_summary(position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventArr
rbind(orderedEventDep, orderedEventArr)
c(TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),], "Type" = "Arr")
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
orderedEventArr
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
rbind(orderedEventDep, orderedEventArr)
rbind(orderedEventDep, orderedEventArr)
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=type))+
stat_summary(fun.y="sum", position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=carrier))+
stat_summary(position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
#dev.off()
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
stat_summary(position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
orderedEvent <- rbind(monthlydata[c('DepDelayevent', 'Carrier')],  monthlydata[c('ArrDelayevent', 'Carrier')])
orderedEvent <- rbind(monthlydata[,c('DepDelayevent', 'Carrier')],  monthlydata[,c('ArrDelayevent', 'Carrier')])
monthlydata[,c('DepDelayevent', 'Carrier')]
monthlydata[,c('ArrDelayevent', 'Carrier')]
rbind(monthlydata[,c('DepDelayevent', 'Carrier')], monthlydata[,c('ArrDelayevent', 'Carrier')])
data1[,c('delayEvent', 'Carrier')] <- monthlydata[,c('DepDelayevent', 'Carrier')]
data <- monthlydata[,c('DepDelayevent', 'Carrier')]
name(data)[1] <- 'delayEvent'
names(data)[1] <- 'delayEvent'
names(data)
names(data)[1] <- 'delayEvent'
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
geom = "bar" +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
?ggplot
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
geom_bar() +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
monthlydata <- mutate(monthlydata, ArrDelayevent = ArrDelayMinutes > 0)
monthlydata <- mutate(monthlydata, DepDelayevent = DepDelayMinutes > 0)
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
geom_bar() +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
data1 <- monthlydata[,c('DepDelayevent', 'Carrier')]
names(data)[1] <- 'delayEvent'
data2 <- monthlydata[,c('ArrDelayevent', 'Carrier')]
names(data)[1] <- 'delayEvent'
orderedEvent <- rbind(data1, data2)
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
data1 <- monthlydata[,c('DepDelayevent', 'Carrier')]
names(data1)[1] <- 'delayEvent'
data2 <- monthlydata[,c('ArrDelayevent', 'Carrier')]
names(data2)[1] <- 'delayEvent'
orderedEvent <- rbind(data1, data2)
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Carrier))+
stat_summary(fun.y="mean", position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, fill=Carrier))+
stat_summary(fun.y="mean", position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
data1 <- monthlydata[,c('DepDelayevent', 'Carrier')]
names(data1)[1] <- 'delayEvent'
data1['Type'] <- "Departure"
data2 <- monthlydata[,c('ArrDelayevent', 'Carrier')]
names(data2)[1] <- 'delayEvent'
data2['Type'] <- "Arrival"
orderedEvent <- rbind(data1, data2)
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, fill=Type))+
stat_summary(fun.y="mean", position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
orderedEvent
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, fill=Type))+
stat_summary(fun.y="sum", position="dodge", geom = "bar") +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier, color = Type,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
main="Percentage of departure delay from different carriers")
orderedEvent
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
main="Percentage of departure delay from different carriers")
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
color = type,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
color = Type,
main="Percentage of departure delay from different carriers")
orderedEvent
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
color = Type,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
fill = Type,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
color = orderedEvent$Type,
main="Percentage of departure delay from different carriers")
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
fill = orderedEvent$Type,
main="Percentage of departure delay from different carriers")
?barplot
par(mar = c(12, 4, 3, 2))
barplot(orderedEvent$DepDelayevent, las = 3, names.arg = orderedEvent$Carrier,
col = orderedEvent$Type,
main="Percentage of departure delay from different carriers")
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = FALSE,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
orderedEvent
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
geom_bar() +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))+
geom_bar( ) +
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
?ggplot
c <- ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))
c + geom_bar()
c <- ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, fill=Type))
c + geom_point()
c <- ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, color=Type))
c + geom_point()
orderedEvent
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent
sum(monthlydata$ArrDelayevent-monthlydata$DepDelayevent)
sum(monthlydata$ArrDelayevent)
sum(monthlydata$DepDelayevent)
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
TotalEventNumberDep
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
TotalEventNumberArr
orderedEventDep <- TotalEventNumber[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep
orderedEventArr <- TotalEventNumber[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr
orderedEventArr['Type'] <- "Arrival"
orderedEventDep['Type'] <- "Departure"
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent
orderedEventDep
orderedEventArr
TotalEventNumberDep
TotalEventNumberArr
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumberDep[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEventDep <- TotalEventNumberDep[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
orderedEventDep['Type'] <- "Departure"
names(orderedEventDep)[1] <- 'delayEvent'
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
names(orderedEventArr)[1] <- 'delayEvent'
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEventDep
orderedEventDep['Type'] <- "Departure"
names(orderedEventDep)[2] <- 'delayEvent'
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
names(orderedEventArr)[2] <- 'delayEvent'
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumberDep[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
names(orderedEventDep)[2] <- 'delayEvent'
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
names(orderedEventArr)[2] <- 'delayEvent'
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent
c <- ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, color=Type))
c + geom_point()
c <- ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, color=Type))
c + geom_bar()
ggplot(data = orderedEvent, aes(x = Carrier, y=DepDelayevent, color=Type))
stat_summary(fun.y="mean", position="dodge", geom = "bar")
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, color=Type))
stat_summary(fun.y="mean", position="dodge", geom = "bar")
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, color=Type))
stat_summary(position="dodge", geom = "bar")
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
c <- ggplot(data = monthlydata, aes(x = Carrier, y=ArrDelayevent))
c + geom_bar()
c <- ggplot(data = monthlydata, aes(x = Carrier, y = ArrDelayMinutes))
c + geom_bar()
ggplot(data = orderedEvent, aes(x = Carrier, y=delayEvent, color=Type))
stat_summary(fun.y="mean", position="dodge", geom = "bar")
ggtitle("Probabity of delay events by carriers") +
ylab("percentage of delay events")+
xlab("carrier")
levels(monthlydata$FlightNum)
levels(as.factor(monthlydata$FlightNum))
length(levels(as.factor(monthlydata$FlightNum)))
length(levels(as.factor(monthlydata$OriginAirportID)))
monthlydata <- mutate(monthlydata, ArrDelayevent = ArrDelayMinutes > 0)
monthlydata <- mutate(monthlydata, DepDelayevent = DepDelayMinutes > 0)
TotalEventNumberDep <- aggregate(DepDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventDep <- TotalEventNumberDep[order(TotalEventNumberDep$DepDelayevent, decreasing = T),]
orderedEventDep['Type'] <- "Departure"
names(orderedEventDep)[2] <- 'delayEvent'
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
names(orderedEventArr)[2] <- 'delayEvent'
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
data
orderedEventDep['Type'] <- "Departure"
names(orderedEventDep)[2] <- 'delayRate'
TotalEventNumberArr <- aggregate(ArrDelayevent ~ Carrier, FUN = mean, data=monthlydata, na.rm=F)
orderedEventArr <- TotalEventNumberArr[order(TotalEventNumberArr$ArrDelayevent, decreasing = T),]
orderedEventArr['Type'] <- "Arrival"
names(orderedEventArr)[2] <- 'delayRate'
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent
library(plotly)
library(plotly)
p <- plot_ly(data, x = ~Carrier, y = ~delayRate, text = ~Type, type = 'scatter', mode = 'markers',
marker = list(size = ~delayRate, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p <- plot_ly(data, y = ~delayRate, text = ~Type, type = 'scatter', mode = 'markers',
marker = list(size = ~delayRate, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p <- plot_ly(data, y = ~delayRate, text = ~Type, type = 'scatter', mode = 'markers',
color = ~Carrier,
marker = list(size = ~delayRate, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
orderedEvent['Carrier'] <- as.factor(orderedEvent['Carrier'])
orderedEvent['Carrier']
levels(orderedEvent['Carrier'])
levels(as.factor(orderedEvent['Carrier']))
(as.factor(orderedEvent['Carrier']))
(as.data.frame(orderedEvent['Carrier']))
as.factor(as.data.frame(orderedEvent['Carrier']))
(class(orderedEvent['Carrier']))
(class(monthlydata['Carrier']))
class(as.factor(monthlydata['Carrier']))
class(as.character(monthlydata['Carrier']))
class(as.character(monthlydata['Carrier']))
class(as.character(orderedEvent['Carrier']))
as.factor(as.character(orderedEvent['Carrier']))
as.character(orderedEvent['Carrier'])
orderedEvent['Carrier']
as.character(monthlydata['Carrier'])
as.factor(monthlydata['Carrier'])
as.character(as.data.frame(monthlydata['Carrier']))
orderedEvent['Carrier']
orderedEvent['Carrier'][1]
orderedEvent['Carrier'][1]
orderedEvent['Carrier'][1,1]
orderedEvent[,'Carrier']
orderedEvent <- rbind(orderedEventDep, orderedEventArr)
orderedEvent['Carrier'] <- as.factor(orderedEvent[,'Carrier'])
p <- plot_ly(data, x = ~Carrier, y = ~delayRate, text = ~Type, type = 'scatter', mode = 'markers',
marker = list(size = ~delayRate, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p <- plot_ly(data, x = ~Carrier, y = ~delayRate, text = ~Type, type = 'bar', mode = 'markers',
marker = list(size = ~delayRate, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p <- plot_ly(data, x = ~as.character(Carrier), y = ~delayRate, text = ~Type, type = 'bar')
source('C:/Users/User/Dropbox/Data Science/Jonhs Hopkins Courses/R coding practice _Ying/9. Developing Data Products/Week 3 project_plotly.R', echo=TRUE)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
library(plotly)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
library(plotly)
p <- plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers", color = ~disp)
mtcars$markers", color =
mtcars$disp
class(mtcars$disp)
